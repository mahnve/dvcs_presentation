Intro
| [image: intro.svg]
| We will talk about Distributed Version Control Systems, how they work and why
| you should use them. Does that match your expectations?
	Q: Anybody in here using DVCS today?
	| Might not be that much news 
	Q: How many are not using version control at all?
	Q: Subversion
	Q: CVS, TFS, Clearcase ...
My story
| Started working for a startup a few years back, as only developer.  Wanted to
| be able to work offline, and wondered if I could take svn repo offline.
| Started looking into it.
|
| [image: a_few_years_back.svg] Main contenders back then was git, Mercurial,
| bzr and svk. Svk seemed like a mutant, bzr was slow and git was incredibly
| complex and Mercurial was just right. 
|
| Used hg for a year, during a time where git got a lot easier to use, and a
| large number of people migrated to it.
|
| These days I favor git, but don't mind using Mercurial. I do have a very hard
| time accepting centralized VCS though.
Intro How centralized VCS work
	| [image: centralized_vcs.svg]
		Problems Offline
			| No such thing
			Branching
			| Big things 
			Small commits
			| implemented in IDE's instead
			Merging
			| Normally suck at branching
	How Decentralized VCS work
	| [image: decentralized_vcs.svg]
	Pull style collaboration
	[image: pull_style_collaboration.svg]
	Central master repository
	[image: central_master_repository.svg]
	Known Projects Using Mercurial
		| [image: project_using_mercurial.svg]
			OpenSolaris OpenJDK Netbeans Adium Growl Go mutt OpenOffice Python
			wget XEmacs Git
		| [image: project_using_git.svg]svg
			Linux Kernel Rails Perl Gnome QT Android Fedora Debian X VLC gcc
			jQuery Others
		| [image: project_using_other_dvcs.svg]
			Ubuntu MariaDb MySQL Squid Size
	| [image: size_comparison.svg] Rails checkout is 13M. A single checkout is
	| 9M. Rails svn repo was 115 M.
Mercurial
	Set up profile
	| vim .hgrc
	New Repo
		hg init myproject
		| new repo. Uses current dir unless 
		vim test.txt
		| write some text
		hg status
		| ? shows that the repo does not recognize the file.
		hg add
		hg st
		| A - it is added
		hg diff
		| shows whats new
		hg commit 
		| opens up editor - write commit message
		hg st
		| shows nothing
		hg log
		| shows what has happened
		Hash as identifier
		| Since we have concurrent repos we cannot have sequential numbering, hg
		| has local numbering which will not be the same across repos.
	Moving files
		hg cp test.txt test2.txt
		hg commit
		hg mv test.txt test1.txt
		hg st
	Fixing history
		hg update 1
		| Backing one version
		hg identify -n
		| Shows which version we're at
		hg update tip
		| tip is the latest version
		hg update 1
		vim test2.txt
		| edit text
		hg commit
		| new head
		hg merge
		hg st
		hg commit -m 'merge'
		hgview
	Merging three heads
	| merge one branch at a time
	Resolving merge problem
		hg resolve --mark <file>
	Recovering 
		hg revert <filename>
	Changing renamed files
		hg update 1
		vim test.txt 
		| renamed later
		hg commit
		hg merge
		| voila!
	Branching
		Cloned branches
			cd ..
			hg clone <repo> <repo2>
			cd repo2
			vim test2.txt
			hg commit 
			hg outgoing
			| Knows parent
			cd -
			hg incoming
			| does not know children
			hg incoming ../<new repo>
			cd -
			hg push
			vim test2.txt
			cd -
			hg pull
			hg update
			| could result in merge of course
		Named branches
			hg branch <name>
			| branches stay in commit history
	Rolling back
		hg rollback
		| rolls back last commit
		| Watch out if this is pull repo
		hg backout
		| can roll back a changeset
	Sharing 
		hg serve -v
		| does not allow push by default
	Tagging
		hg tag REL_1.0
		hg tag -r <commit> tagname
		hg tags
		| shows tags
		hg up REL_1.0
| Starting here since it looks most like Subversion
	BitBucket
Git 
| [image: git_workflow.svg]
	Set up profile
	| git config --global user.name "Marcus Ahnve" git config --global
	| user.email "marcus@ahnve.com"
	| 
	| ends up in .gitconfig
	New Repo 
		git init
		| Nu har vi ett repo!
		vim test.txt
		| write text
		git status
		| show that there is a file
		git add .
		| add files
		git status git commit -m 'test' vim test.txt
		| 채ndra filen
		git status
		| vad h채nde vi m책ste l채gga till den igen?
		git commit -a -m 'another commit' 
		git log Workflow overview 
	Branching 
	| git is all about branching so lets start early
		Feature branches
		| [image: feature_branches.svg]
		git branch something_new 
		git checkout something_new 
		git checkout -b something_else 
		git branch
		| Shows branches
		vim test.txt
		| edit some text
		git commit -a -m 'minor edit' git checkout master vim test.txt
		| Whoah! Where did the text go?
		git log git merge something_else git log git branch -d something_else
		Remote
		Deleting branches
			git -d branchname
			| asserts that changes are merged
			git -D branchname
			| hard delete
		Resetting merges
			git reset --hard HEAD
			git reset --hard ORIG_HEAD
			| if you already commited
	| ssh, http,  https or git
	| a clone is a complete copy
		GitHub
	Copying files
		git cp
		git mv
	Fixing history
		git co <old>
		vim test.txt
		git commit -m 'message'
		git st
		| Detached head
		| Will get back to branches
		gitk
		git co -b 'a branch'
		gitk
		git rebase master
		git co master
		git merge b
		git branch -d b
	| [image: git_workflow_overview.svg]
	Recovering files
		git reset --hard HEAD
		| soft leaves index and working tree
		| mixed resets index but not working tree
	Ignoring files
	| .gitignore
	|
	| log/* etc
	Working remote
		remotes
			git add remote another /home/mahnve/tmp/gittmp2
			git pull another
		GitHub
		| [image: github.svg]
			Set up new repo at github
Problems deciding?
| [image: gitvsmercurial.svg]
| Help can be found at http://www.gitvsmercurial.com
Thankyou!
| [image: thankyou.svg]
